// <auto-generated />
using System;
using Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace p1.Migrations
{
    [DbContext(typeof(RepositoryContext))]
    [Migration("20231121214243_InitialDatarr")]
    partial class InitialDatarr
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Entities.Models.Apartment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ApartmentId");

                    b.Property<int>("ApartmentNumber")
                        .HasMaxLength(4)
                        .HasColumnType("int");

                    b.Property<string>("Cost")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<Guid>("HouseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("NumberRooms")
                        .HasMaxLength(2)
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("HouseId");

                    b.ToTable("Apartment");

                    b.HasData(
                        new
                        {
                            Id = new Guid("1e707554-3a47-43d1-aae7-e990d385081b"),
                            ApartmentNumber = 10,
                            Cost = "6000000",
                            HouseId = new Guid("cf07407f-a0c4-46cc-870b-850d29c6ac93"),
                            NumberRooms = 4
                        },
                        new
                        {
                            Id = new Guid("4d57c4a3-b6c3-464f-bad1-6550d4bf3182"),
                            ApartmentNumber = 15,
                            Cost = "4000000",
                            HouseId = new Guid("cf07407f-a0c4-46cc-870b-850d29c6ac93"),
                            NumberRooms = 2
                        },
                        new
                        {
                            Id = new Guid("621d298f-8734-4cbb-814b-9a126c5ba0da"),
                            ApartmentNumber = 8,
                            Cost = "4500000",
                            HouseId = new Guid("cf07407f-a0c4-46cc-870b-850d29c6ac93"),
                            NumberRooms = 3
                        },
                        new
                        {
                            Id = new Guid("d67977ae-cb1a-4747-8a02-2b0b2e7d1bd8"),
                            ApartmentNumber = 17,
                            Cost = "2500000",
                            HouseId = new Guid("a539dd53-125b-4eef-9cbe-ab9d9b5bfdd8"),
                            NumberRooms = 1
                        },
                        new
                        {
                            Id = new Guid("e4ce4d0b-0725-4a56-8ce9-49333bc3682a"),
                            ApartmentNumber = 28,
                            Cost = "2800000",
                            HouseId = new Guid("a539dd53-125b-4eef-9cbe-ab9d9b5bfdd8"),
                            NumberRooms = 1
                        });
                });

            modelBuilder.Entity("Entities.Models.Company", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CompanyId");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.HasKey("Id");

                    b.ToTable("Companies");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c9d4c053-49b6-410c-bc78-2d54a9991870"),
                            Address = "583 Wall Dr. Gwynn Oak, MD 21207",
                            Country = "USA",
                            Name = "IT_Solutions Ltd"
                        },
                        new
                        {
                            Id = new Guid("3d490a70-94ce-4d15-9494-5248280c2ce3"),
                            Address = "312 Forest Avenue, BF 923",
                            Country = "USA",
                            Name = "Admin_Solutions Ltd"
                        });
                });

            modelBuilder.Entity("Entities.Models.Employee", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("EmployeeId");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            Id = new Guid("80abbca8-664d-4b20-b5de-024705497d4a"),
                            Age = 26,
                            CompanyId = new Guid("c9d4c053-49b6-410c-bc78-2d54a9991870"),
                            Name = "Sam Raiden",
                            Position = "Software developer"
                        },
                        new
                        {
                            Id = new Guid("86dba8c0-d178-41e7-938c-ed49778fb52a"),
                            Age = 30,
                            CompanyId = new Guid("c9d4c053-49b6-410c-bc78-2d54a9991870"),
                            Name = "Jana McLeaf",
                            Position = "Software developer"
                        },
                        new
                        {
                            Id = new Guid("021ca3c1-0deb-4afd-ae94-2159a8479811"),
                            Age = 35,
                            CompanyId = new Guid("3d490a70-94ce-4d15-9494-5248280c2ce3"),
                            Name = "Kane Miller",
                            Position = "Administrator"
                        });
                });

            modelBuilder.Entity("Entities.Models.House", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("HouseId");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<int>("NumberFloors")
                        .HasMaxLength(3)
                        .HasColumnType("int");

                    b.Property<int>("YearConstruction")
                        .HasMaxLength(4)
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("House");

                    b.HasData(
                        new
                        {
                            Id = new Guid("cf07407f-a0c4-46cc-870b-850d29c6ac93"),
                            Address = "Саранск, ул. Коммунистическая, 25а",
                            NumberFloors = 9,
                            YearConstruction = 2010
                        },
                        new
                        {
                            Id = new Guid("a539dd53-125b-4eef-9cbe-ab9d9b5bfdd8"),
                            Address = "Саранск, ул. Лесная, 64",
                            NumberFloors = 5,
                            YearConstruction = 2006
                        });
                });

            modelBuilder.Entity("Entities.Models.Apartment", b =>
                {
                    b.HasOne("Entities.Models.House", "House")
                        .WithMany("Apartments")
                        .HasForeignKey("HouseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("House");
                });

            modelBuilder.Entity("Entities.Models.Employee", b =>
                {
                    b.HasOne("Entities.Models.Company", "Company")
                        .WithMany("Employees")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("Entities.Models.Company", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("Entities.Models.House", b =>
                {
                    b.Navigation("Apartments");
                });
#pragma warning restore 612, 618
        }
    }
}
